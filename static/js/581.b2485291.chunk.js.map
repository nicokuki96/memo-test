{"version":3,"file":"static/js/581.b2485291.chunk.js","mappings":"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","sources":["components/Popup.jsx","components/Board.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst Popup = (props) => {\r\n  const { handleClose, open, allBoard } = props;\r\n\r\n  const resetGame = () => {\r\n    allBoard.forEach((element, index) => {\r\n      element.state = 0;\r\n    });\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            You win!\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            <Button onClick={resetGame} variant=\"contained\">\r\n              Restart\r\n            </Button>\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport uuniq from \"uniqid\";\r\nimport arrayShuffle from \"array-shuffle\";\r\nimport Popup from \"./Popup\";\r\n\r\nconst Board = () => {\r\n  const [squares1, setSquares1] = useState([\r\n    \"cyan\",\r\n    \"gold\",\r\n    \"pink\",\r\n    \"chili\",\r\n    \"black\",\r\n    \"blue\",\r\n  ]);\r\n  const [allBoard, setAllBoard] = useState([]);\r\n  const [selected, setSelected] = useState();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setRandomPosition();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  // const randomNumberInRange = (min, max) => {\r\n  //   return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  // };\r\n\r\n  // const apiFetch = async () => {\r\n  //   const random = randomNumberInRange(0, 100);\r\n  //   const request = await fetch(\r\n  //     `https://api.pexels.com/v1/curated?page=${random}}&per_page=6\r\n  //   `,\r\n  //     {\r\n  //       headers: {\r\n  //         Authorization:\r\n  //           \"HbBjqRDPA4Ea4zSvMndnaN8KOoyys3cZWbmcFelwrQha9cLqJa5zJggU\",\r\n  //       },\r\n  //     }\r\n  //   );\r\n  //   const data = await request.json();\r\n  //   const dataPics = data.photos;\r\n  //   const imageFromServer = [];\r\n  //   dataPics.forEach((item) => {\r\n  //     imageFromServer.push(item.src.tiny);\r\n  //   });\r\n  //   setRandomPosition(imageFromServer);\r\n  // };\r\n\r\n  const setRandomPosition = () => {\r\n    const random1 = arrayShuffle(squares1);\r\n    const random2 = arrayShuffle(squares1);\r\n    let board = random1.concat(random2);\r\n    board = board.map((item, i) => {\r\n      // states: 0 (close), 1 (opened but wrong), 2 (opened pair)\r\n      return {\r\n        id: uuniq(),\r\n        color: item,\r\n        state: 0,\r\n      };\r\n    });\r\n    setAllBoard(board);\r\n  };\r\n  const showColor = (item) => {\r\n    if (item.state === 0) {\r\n      // const find = allBoard.findIndex((i) => i.id === item.id);\r\n      const newBoard = allBoard.map((square) => {\r\n        if (square.id === item.id) {\r\n          const newSquare = {\r\n            ...item,\r\n            state: 1,\r\n          };\r\n          return newSquare;\r\n        }\r\n        return square;\r\n      });\r\n      // Block click when the array has 2 in state un 1\r\n      const twoSelected = newBoard.filter((x) => x.state === 1).length;\r\n      if (twoSelected < 3) {\r\n        setAllBoard(newBoard);\r\n      }\r\n      if (selected) {\r\n        checkPair(item);\r\n      } else {\r\n        setSelected(item.color);\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkPair = (item) => {\r\n    const arrSelected = allBoard.map((square) => {\r\n      if (square.color === selected && selected === item.color) {\r\n        const pairBoard = {\r\n          ...square,\r\n          state: 2,\r\n        };\r\n        return pairBoard;\r\n      } else if (square.state === 1) {\r\n        const wrongBoard = {\r\n          ...square,\r\n          state: 0,\r\n        };\r\n        return wrongBoard;\r\n      } else {\r\n        return square;\r\n      }\r\n    });\r\n    setSelected();\r\n    setTimeout(() => {\r\n      setAllBoard(arrSelected);\r\n    }, 1000);\r\n    checkWin();\r\n  };\r\n\r\n  const checkWin = () => {\r\n    // const win = allBoard.every((v) => v.state === 2);\r\n    const win = allBoard.filter((x) => x.state === 2).length;\r\n    if (win === 10) {\r\n      handleOpen();\r\n    }\r\n  };\r\n\r\n  // Si esta funcion la meto en renderBoar no funciona\r\n  //   const squareRender = (number, id) => {\r\n  //     <div id={id} className=\"squares\">\r\n  //       {number}\r\n  //     </div>;\r\n  //   };\r\n\r\n  const renderBoard = () => {\r\n    return (\r\n      <>\r\n        {allBoard.map((item) => (\r\n          <div\r\n            style={{\r\n              backgroundSize: \"cover\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundImage: `url(${\r\n                (item.state === 1 || item.state === 2) && item.color\r\n              })`,\r\n            }}\r\n            onClick={() => showColor(item)}\r\n            key={uuniq()}\r\n            className={`squares ${\r\n              (item.state === 1 || item.state === 2) && item.color\r\n            }\r\n            `}\r\n          ></div>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"board\" id=\"board\">\r\n      {renderBoard()}\r\n      <Popup open={open} allBoard={allBoard} handleClose={handleClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","props","handleClose","open","allBoard","_jsx","children","Modal","_jsxs","Box","sx","Typography","id","variant","component","mt","Button","onClick","forEach","element","index","state","_useState","useState","_useState2","_slicedToArray","squares1","_useState3","_useState4","setAllBoard","_useState5","_useState6","selected","setSelected","_useState7","_useState8","setOpen","useEffect","setRandomPosition","random1","arrayShuffle","random2","board","concat","map","item","i","uuniq","color","checkPair","arrSelected","square","_objectSpread","setTimeout","checkWin","filter","x","length","className","_Fragment","backgroundSize","backgroundRepeat","backgroundImage","newBoard","showColor","Popup"],"sourceRoot":""}